#!/usr/bin/env python3
#
# Author: Stefan Haller <stefan.haller@iwr.uni-heidelberg.de>

from collections import namedtuple

import exercise_1 as student


Node = namedtuple('Node', 'costs')
Edge = namedtuple('Edge', 'left right costs')

nodes = [Node(costs=[9.691, -2.3752, 0.0987]),
         Node(costs=[0.9986, -7.7079, 5.6862]),
         Node(costs=[-5.8935, -8.0664, 5.969]),
         Node(costs=[-4.3176, 8.1813, -1.2446]),
         Node(costs=[-1.6723, 0.6998, -3.6954])]

edges = [Edge(left=0, right=1, costs={(0, 0): -3.9159, (0, 1): 5.85, (0, 2): -4.7939, (1, 0): -7.8181, (1, 1): 5.4672, (1, 2): 7.7718, (2, 0): 5.8543, (2, 1): -6.8887, (2, 2): 1.7876}),
         Edge(left=0, right=2, costs={(0, 0): -6.4049, (0, 1): 8.904, (0, 2): -1.8938, (1, 0): -4.5657, (1, 1): -3.8663, (1, 2): -9.9305, (2, 0): -3.1055, (2, 1): -6.591, (2, 2): 8.9614}),
         Edge(left=0, right=3, costs={(0, 0): -1.0937, (0, 1): 1.0297, (0, 2): -7.8613, (1, 0): -7.5173, (1, 1): 8.2634, (1, 2): 5.5371, (2, 0): 5.2456, (2, 1): -1.1742, (2, 2): -1.4712}),
         Edge(left=0, right=4, costs={(0, 0): 5.2057, (0, 1): -5.1957, (0, 2): -5.2287, (1, 0): -0.8213, (1, 1): -4.3382, (1, 2): -4.3687, (2, 0): -3.2938, (2, 1): 3.1702, (2, 2): 8.4605}),
         Edge(left=1, right=2, costs={(0, 0): 7.4094, (0, 1): 4.8436, (0, 2): 0.9137, (1, 0): -4.4914, (1, 1): 4.7042, (1, 2): 0.4877, (2, 0): -9.5972, (2, 1): 6.2891, (2, 2): 9.1979}),
         Edge(left=1, right=3, costs={(0, 0): 7.5832, (0, 1): 3.7768, (0, 2): 1.347, (1, 0): -8.3239, (1, 1): -5.85, (1, 2): -6.5418, (2, 0): 1.4386, (2, 1): -0.7296, (2, 2): -2.7997}),
         Edge(left=1, right=4, costs={(0, 0): 3.3883, (0, 1): -7.1952, (0, 2): 8.1274, (1, 0): -8.503, (1, 1): -6.7619, (1, 2): -0.3693, (2, 0): -0.7216, (2, 1): 3.3241, (2, 2): 0.4973}),
         Edge(left=2, right=3, costs={(0, 0): 6.4853, (0, 1): -1.821, (0, 2): -1.5925, (1, 0): -6.3369, (1, 1): 8.4083, (1, 2): 6.6462, (2, 0): -4.9005, (2, 1): 3.2905, (2, 2): 0.849}),
         Edge(left=2, right=4, costs={(0, 0): 0.3729, (0, 1): -8.0883, (0, 2): 0.8122, (1, 0): 9.7608, (1, 1): 5.9125, (1, 2): -3.5372, (2, 0): 9.9937, (2, 1): 7.0355, (2, 2): -8.9403}),
         Edge(left=3, right=4, costs={(0, 0): 1.8368, (0, 1): 4.8559, (0, 2): 0.2353, (1, 0): 7.0079, (1, 1): -4.8822, (1, 2): -9.9903, (2, 0): 1.9393, (2, 1): -9.1514, (2, 2): 3.0298})]

ground_truth = ((2, 1, 0, 2, 1), -58.96999999999999)


def run_test():
    student_assignment, student_value = student.bruteforce(nodes, edges)
    assert tuple(student_assignment) == ground_truth[0]
    assert abs(student_value - ground_truth[1]) < 1e-4
    print('Ok')


if __name__ == '__main__':
    run_test()
